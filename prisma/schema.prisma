generator client {
  provider = "prisma-client"
  output   = "../app/generated/prisma"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  age Int?
  name  String?
  posts Post[]
  @@map("users")
}

model Post {
  id        Int     @id @default(autoincrement())
  title     String
  content   String?
  published Boolean @default(false)
  author_id  Int
  author    User    @relation(fields: [author_id], references: [id])
  @@map("posts")
}

model Chat {
  id       String   @id @default(uuid())
  title     String?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  // Relação 1:1 opcional com Task
  task      Task?

  messages ChatMessage[]

  @@map("chats")
}

enum ChatMessageRole {
  user
  assistant
  system
}

model ChatMessage {
  id       String   @id @default(uuid())
  content   String
  role ChatMessageRole @default(user)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  chat_id String
  chat Chat @relation(fields: [chat_id], references: [id])
  
  @@map("chat_messages")
}

model Task {
  id                        String   @id @default(uuid())
  title                     String
  description               String
  steps                     String?
  estimated_time            String
  implementation_suggestion String?
  acceptance_criteria       String?
  suggested_tests           String?
  content                   String?
  chat_history              String?
  created_at                DateTime @default(now())
  updated_at                DateTime @updatedAt

  // Relação 1:1 obrigatória com Chat
  chat                      Chat     @relation(fields: [chat_id], references: [id])
  chat_id                   String      @unique

  @@map("tasks")
}